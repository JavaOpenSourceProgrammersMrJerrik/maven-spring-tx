<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njq.nongfadai.dao.s61.LcAccountFlowMapper" >
  <resultMap id="BaseResultMap" type="com.njq.nongfadai.dao.model.s61.LcAccountFlow" >
    <id column="fid" property="fid" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="buss_type_id" property="bussTypeId" jdbcType="INTEGER" />
    <result column="to_account_id" property="toAccountId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="expenses" property="expenses" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="desc_" property="desc" jdbcType="VARCHAR" />
    <result column="check_status" property="checkStatus" jdbcType="CHAR" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fid, account_id, buss_type_id, to_account_id, create_time, income, expenses, balance, 
    desc_, check_status, check_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s61.t_lc_account_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from s61.t_lc_account_flow
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from s61.t_lc_account_flow
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlowExample" >
    delete from s61.t_lc_account_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlow" >
    insert into s61.t_lc_account_flow (fid, account_id, buss_type_id, 
      to_account_id, create_time, income, 
      expenses, balance, desc_, 
      check_status, check_time)
    values (#{fid,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{bussTypeId,jdbcType=INTEGER}, 
      #{toAccountId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{income,jdbcType=DECIMAL}, 
      #{expenses,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, #{desc,jdbcType=VARCHAR}, 
      #{checkStatus,jdbcType=CHAR}, #{checkTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlow"  useGeneratedKeys="true" keyProperty="fid">
    insert into s61.t_lc_account_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fid,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="bussTypeId != null" >
        buss_type_id,
      </if>
      <if test="toAccountId != null" >
        to_account_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="expenses != null" >
        expenses,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="desc != null" >
        desc_,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="bussTypeId != null" >
        #{bussTypeId,jdbcType=INTEGER},
      </if>
      <if test="toAccountId != null" >
        #{toAccountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DECIMAL},
      </if>
      <if test="expenses != null" >
        #{expenses,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=CHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlowExample" resultType="java.lang.Integer" >
    select count(*) from s61.t_lc_account_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update s61.t_lc_account_flow
    <set >
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.bussTypeId != null" >
        buss_type_id = #{record.bussTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.toAccountId != null" >
        to_account_id = #{record.toAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=DECIMAL},
      </if>
      <if test="record.expenses != null" >
        expenses = #{record.expenses,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.desc != null" >
        desc_ = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=CHAR},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s61.t_lc_account_flow
    set fid = #{record.fid,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      buss_type_id = #{record.bussTypeId,jdbcType=INTEGER},
      to_account_id = #{record.toAccountId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      income = #{record.income,jdbcType=DECIMAL},
      expenses = #{record.expenses,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      desc_ = #{record.desc,jdbcType=VARCHAR},
      check_status = #{record.checkStatus,jdbcType=CHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlow" >
    update s61.t_lc_account_flow
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="bussTypeId != null" >
        buss_type_id = #{bussTypeId,jdbcType=INTEGER},
      </if>
      <if test="toAccountId != null" >
        to_account_id = #{toAccountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="expenses != null" >
        expenses = #{expenses,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="desc != null" >
        desc_ = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=CHAR},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njq.nongfadai.dao.model.s61.LcAccountFlow" >
    update s61.t_lc_account_flow
    set account_id = #{accountId,jdbcType=INTEGER},
      buss_type_id = #{bussTypeId,jdbcType=INTEGER},
      to_account_id = #{toAccountId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      income = #{income,jdbcType=DECIMAL},
      expenses = #{expenses,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      desc_ = #{desc,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=CHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
</mapper>